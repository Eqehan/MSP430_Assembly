#include "msp430.h"                     ; #define controlled include file

        NAME    main                    ; module name

        PUBLIC  main                    ; make the main label vissible
                                        ; outside this module
        ORG     0FFFEh
        DC16    init                    ; set reset vector to 'init' label

        RSEG    CSTACK                  ; pre-declaration of segment
        RSEG    CODE                    ; place program in 'CODE' segment

init:   MOV     #SFE(CSTACK), SP        ; set up stack

main:   NOP                             ; main program
        MOV.W   #WDTPW+WDTHOLD,&WDTCTL  ; Stop watchdog timer
        
        MOV.W   #0x1234, R8       // IMMEDIATE TO REGISTER
        MOV.W   R8, R9            // Registerlar arasi islem
        MOV.W   #0x300, R10
        
        MOV.W   #0xABCD, &0x250   // Soldaki immediate, sagdaki absolute
        MOV.W   @R10, R8         // Indirect register'ýn gosterdiginden register'a yaz
        
        MOV.W   #0X5678, 6(R10)  // R10 belleginin yerine 6 ekle, oranýn gosterdigi yere yaz
        MOV.W   @R10+, R11       // 
        
        JMP $                           ; jump to current location '$'
                                        ; (endless loop)
        END
